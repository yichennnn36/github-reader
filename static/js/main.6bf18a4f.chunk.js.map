{"version":3,"sources":["components/Header/HeaderStyle.js","components/Header/Header.js","components/Footer/FooterStyle.js","components/Footer/Footer.js","components/List/ListStyle.js","components/Loading/Loading.js","api.js","hooks/usePost.js","components/List/List.js","constants/globalStyle.js","App.js","index.js"],"names":["HeaderWrapper","styled","div","Header","FooterWrapper","Footer","ListWrapper","ListBlock","CardContainer","Loading","loading","BASE_URL","process","TOKEN","fetchData","perPage","page","a","fetch","headers","method","response","json","alert","console","log","fetchDataCount","usePost","useState","listData","setListData","isLoading","setIsLoading","pageRef","useRef","totalPage","getData","useCallback","fetchingData","current","data","length","setTimeout","useEffect","getDataCount","totalCount","Math","ceil","ref","observer","IntersectionObserver","isIntersecting","disconnect","options","rootMargin","threshold","observe","map","list","index","title","name","bordered","description","href","html_url","GlobalStyle","createGlobalStyle","App","List","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bf18a4f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  height: 80px;\n  width: 100%;\n  padding: 0 14px;\n  background: black;\n  position: fixed;\n  z-index: 2;\n  top: 0;\n\n  & h2 {\n    line-height: 5rem;\n    color: #a9d992;\n  }\n`;","import { HeaderWrapper } from './HeaderStyle';\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <h2>Yichen's GitHub Data</h2>\n    </HeaderWrapper>\n  )\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const FooterWrapper = styled.div`\n  background: black;\n  height: 50px;\n  text-align: center;\n\n  & span {\n    color: white;\n    line-height: 3rem;\n  }\n`;\n","import { FooterWrapper } from './FooterStyle';\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <span>\n        Copyright © 2021 Yichen Liu All rights reserved\n      </span>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  margin: 120px auto 80px;\n  padding: 20px 100px;\n  min-height: 100%;\n`;\n\nexport const ListBlock = styled.div`\n  margin: 50px 0;\n`;\n\nexport const CardContainer = styled.div`\n  margin-bottom: 50px;\n\n  & .ant-card {\n    border: 3px solid #a9d992;\n    border-radius: 10px;\n  }\n  & .ant-card-head-title {\n    font-size: 20px;\n  }\n`;\n","import { Card } from 'antd';\n\nconst Loading = () => {\n  return (\n    <Card loading=\"true\" />\n  )\n}\n\nexport default Loading;\n","const BASE_URL = process.env.REACT_APP_URL;\nconst TOKEN = process.env.REACT_APP_TOKEN;\n\nexport const fetchData = async (perPage, page) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/yichennnn36/repos?per_page=${perPage}&page=${page}`, {\n      headers: {\n        'Authorization': `Bearer ${TOKEN}`,\n        'Accept': 'application/vnd.github.v3+json'\n      },\n      method: 'GET'\n    });\n    return response.json();\n  } catch (error) {\n    alert('操作失敗，發生錯誤');\n    console.log('error', error);\n  }\n};\n\nexport const fetchDataCount = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/yichennnn36/repos`, {\n      headers: {\n        'Authorization': `Bearer ${TOKEN}`,\n        'Accept': 'application/vnd.github.v3+json'\n      },\n      method: 'GET'\n    });\n    return response.json();\n  } catch (error) {\n    alert('操作失敗，發生錯誤');\n    console.log('error', error);\n  }\n};","import { useState, useEffect, useRef, useCallback } from 'react';\nimport { fetchData, fetchDataCount } from '../api';\n\nconst usePost = () => {\n  const [listData, setListData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const pageRef = useRef(1);\n  const totalPage = useRef(0);\n  const perPage = 4;\n\n  const getData = useCallback(() => {\n    const fetchingData = async () => {\n      const data = await fetchData(perPage, pageRef.current);\n      if (data.length === 0) return setIsLoading(false);\n      console.log(data);\n      setTimeout(() => {\n        setIsLoading(false);\n        setListData(listData => [\n          ...listData,\n          ...data\n        ]);\n      }, 500);\n    };\n    fetchingData();\n  }, []);\n\n  useEffect(() => {\n    getData();\n    const getDataCount = async () => {\n      const response = await fetchDataCount();\n      const totalCount = await response.length;\n      totalPage.current = Math.ceil(totalCount / perPage);\n    };\n    getDataCount();\n  }, [getData]);\n\n  return {\n    listData,\n    isLoading,\n    setIsLoading,\n    pageRef,\n    totalPage,\n    getData\n  }\n};\n\nexport default usePost;","import { useEffect, useRef } from 'react';\nimport { ListWrapper, ListBlock, CardContainer } from './ListStyle';\nimport { Card } from 'antd';\nimport Loading from '../Loading/Loading';\nimport usePost from '../../hooks/usePost';\n\nconst Header = () => {\n  const ref = useRef();\n  const {\n    listData,\n    isLoading,\n    setIsLoading,\n    pageRef,\n    totalPage,\n    getData\n  } = usePost();\n\n  useEffect(() => {\n    const options = {\n      options: null, // Defaults to the browser viewport\n      rootMargin: \"-20px\",\n      threshold: 1\n    };\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          if (pageRef.current >= totalPage.current) return;\n          pageRef.current++;\n          setIsLoading(true);\n          setTimeout(() => {\n            getData();\n            observer.disconnect();\n          }, 500);\n        }\n      },\n      options\n    );\n    if (ref.current) observer.observe(ref.current);\n  }, [ref, listData, getData, pageRef, setIsLoading, totalPage]);\n\n  return (\n    <ListWrapper>\n      <h1>My GitHub public repos</h1>\n      <ListBlock>\n        {\n          listData.length > 0 &&\n          listData.map((list, index) =>\n            index + 1 === listData.length ?\n              (\n                <CardContainer ref={ref} key={index}>\n                  <Card title={list.name} bordered={false}>\n                    <p>Description：{list.description}</p>\n                    <p>Url：<a href={list.html_url}>{list.html_url}</a></p>\n                  </Card>\n                </CardContainer>\n              ) :\n              (\n                <CardContainer key={index}>\n                  <Card title={list.name} bordered={false}>\n                    <p>Description：{list.description}</p>\n                    <p>Url：<a href={list.html_url}>{list.html_url}</a></p>\n                  </Card>\n                </CardContainer>\n              )\n          )\n        }\n        {isLoading && <Loading />}\n      </ListBlock>\n    </ListWrapper>\n  )\n};\n\nexport default Header;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n`;\n","import Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport List from './components/List/List';\nimport { GlobalStyle } from './constants/globalStyle';\nimport 'antd/dist/antd.css';\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <List />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}