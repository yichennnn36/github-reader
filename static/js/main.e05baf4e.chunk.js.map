{"version":3,"sources":["components/Header/HeaderStyle.js","components/Header/Header.js","components/Footer/FooterStyle.js","components/Footer/Footer.js","components/List/ListStyle.js","components/Loading/Loading.js","api.js","hooks/usePost.js","components/List/List.js","constants/globalStyle.js","App.js","index.js"],"names":["HeaderWrapper","styled","div","Header","FooterWrapper","Footer","ListWrapper","ListBlock","CardContainer","Loading","loading","BASE_URL","name","fetchData","perPage","page","a","fetch","headers","response","status","json","alert","fetchDataCount","usePost","useState","listData","setListData","isLoading","setIsLoading","pageRef","useRef","totalPage","fetchingData","current","data","length","console","log","fetchingDataCount","totalCount","Math","ceil","getData","useCallback","fetchingAllData","Promise","all","setTimeout","useEffect","List","ref","observer","IntersectionObserver","isIntersecting","disconnect","options","rootMargin","threshold","observe","map","list","index","title","bordered","description","href","html_url","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e05baf4e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  height: 80px;\n  width: 100%;\n  padding: 0 14px;\n  background: black;\n  position: fixed;\n  z-index: 2;\n  top: 0;\n\n  & h2 {\n    line-height: 5rem;\n    color: #a9d992;\n  }\n`;","import { HeaderWrapper } from './HeaderStyle';\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <h2>Yichen's GitHub List</h2>\n    </HeaderWrapper>\n  )\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const FooterWrapper = styled.div`\n  background: black;\n  height: 50px;\n  text-align: center;\n\n  & span {\n    color: white;\n    line-height: 3rem;\n  }\n`;\n","import { FooterWrapper } from './FooterStyle';\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <span>\n        Copyright © 2021 Yichen Liu All rights reserved\n      </span>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  margin: 120px auto 80px;\n  padding: 20px 100px;\n  min-height: 100%;\n`;\n\nexport const ListBlock = styled.div`\n  margin: 50px 0;\n`;\n\nexport const CardContainer = styled.div`\n  margin-bottom: 50px;\n\n  & .ant-card {\n    border: 3px solid #a9d992;\n    border-radius: 10px;\n  }\n  & .ant-card-head-title {\n    font-size: 20px;\n  }\n`;\n","import { Card } from 'antd';\n\nconst Loading = () => {\n  return (\n    <Card loading=\"true\" />\n  )\n}\n\nexport default Loading;\n","const BASE_URL = `https://api.github.com`;\nconst name = `yichennnn36`;\n\nexport const fetchData = async (perPage, page) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/${name}/repos?per_page=${perPage}&page=${page}`, {\n      headers: {\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    });\n    if (response.status >= 200 && response.status < 400) return response.json();\n    return;\n  } catch (error) {\n    alert('操作失敗，發生錯誤');\n  }\n};\n\nexport const fetchDataCount = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/${name}/repos`, {\n      headers: {\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    });\n    if (response.status >= 200 && response.status < 400) return response.json();\n    return;\n  } catch (error) {\n    alert('操作失敗，發生錯誤');\n  }\n};","import { useState, useEffect, useRef, useCallback } from 'react';\nimport { fetchData, fetchDataCount } from '../api';\n\nconst usePost = () => {\n  const [listData, setListData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const pageRef = useRef(1);\n  const totalPage = useRef(0);\n  const perPage = 4;\n\n  const fetchingData = async () => {\n    try {\n      const data = await fetchData(perPage, pageRef.current);\n      if (data.length === 0) return setIsLoading(false);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchingDataCount = async () => {\n    try {\n      const response = await fetchDataCount();\n      const totalCount = await response.length;\n      totalPage.current = Math.ceil(totalCount / perPage);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getData = useCallback(() => {\n    const fetchingAllData = async () => {\n      try {\n        const [data] = await Promise.all([\n          fetchingData(),\n          fetchingDataCount()\n        ]);\n        if (data.length === 0) return setIsLoading(false);\n\n        setTimeout(() => {\n          setIsLoading(false);\n          setListData(listData => [\n            ...listData,\n            ...data\n          ]);\n        }, 500);\n      } catch (error) {\n        alert('發生錯誤');\n      }\n    };\n    fetchingAllData();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  return {\n    listData,\n    isLoading,\n    setIsLoading,\n    pageRef,\n    totalPage,\n    getData\n  }\n};\n\nexport default usePost;","import { useEffect, useRef } from 'react';\nimport { ListWrapper, ListBlock, CardContainer } from './ListStyle';\nimport { Card } from 'antd';\nimport Loading from '../Loading/Loading';\nimport usePost from '../../hooks/usePost';\n\nconst List = () => {\n  const ref = useRef();\n  const {\n    listData,\n    isLoading,\n    setIsLoading,\n    pageRef,\n    totalPage,\n    getData\n  } = usePost();\n\n  useEffect(() => {\n    const options = {\n      options: null, // Defaults to the browser viewport\n      rootMargin: \"-20px\",\n      threshold: 1\n    };\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          if (pageRef.current >= totalPage.current) return;\n          pageRef.current++;\n          setIsLoading(true);\n          setTimeout(() => {\n            getData();\n            observer.disconnect();\n          }, 500);\n        }\n      },\n      options\n    );\n    if (ref.current) observer.observe(ref.current);\n  }, [ref, listData, getData, pageRef, setIsLoading, totalPage]);\n\n  return (\n    <ListWrapper>\n      <h1>My GitHub public repos</h1>\n      <ListBlock>\n        {\n          listData.length > 0 &&\n          listData.map((list, index) =>\n            index + 1 === listData.length ?\n              (\n                <CardContainer ref={ref} key={index}>\n                  <Card title={list.name} bordered={false}>\n                    <p>Description：{list.description}</p>\n                    <p>Url：<a href={list.html_url}>{list.html_url}</a></p>\n                  </Card>\n                </CardContainer>\n              ) :\n              (\n                <CardContainer key={index}>\n                  <Card title={list.name} bordered={false}>\n                    <p>Description：{list.description}</p>\n                    <p>Url：<a href={list.html_url}>{list.html_url}</a></p>\n                  </Card>\n                </CardContainer>\n              )\n          )\n        }\n        {isLoading && <Loading />}\n      </ListBlock>\n    </ListWrapper>\n  )\n};\n\nexport default List;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n`;\n","import Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport List from './components/List/List';\nimport { GlobalStyle } from './constants/globalStyle';\nimport 'antd/dist/antd.css';\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <List />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}